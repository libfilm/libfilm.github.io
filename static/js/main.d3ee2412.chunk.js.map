{"version":3,"sources":["store.js","api/index.js","components/Movie&Ep.jsx","components/Info.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["storeData","store","url_api","api_token","loadData","url","a","fetch","promise","json","NotFound","props","document","title","href","Movie","useState","prev","undefined","current","next","infoEp","setInfoEp","setData","useParams","id","type","season","ep","useEffect","info","episodes","sort","b","season_num","map","item","index","num","episode","Number","ru_title","className","window","location","host","aria-current","Date","released","toLocaleDateString","src","iframe_src","split","allowFullScreen","season_count","key","Loading","Info","sendType","data","then","res","catch","length","indexOf","Search","searchData","setSearch","showSearch","setShowSearch","movies","serials","animes","anime_serials","filter","showLoadSearch","value","concat","onChange","event","target","search","onFocus","aria-label","placeholder","aria-describedby","onClick","defaultChecked","for","getUserConfirmation","message","callback","confirm","origin","content_type","view","basename","path","exact","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.d3ee2412.chunk.js","sourcesContent":["import { store } from 'react-easy-state';\r\n\r\nconst storeData = store({\r\n    url_api:'https://videocdn.tv',\r\n    api_token:'fLp8cUIIj0r4hSbAQHaA35fY2yHBEV4f'\r\n});\r\nexport { storeData };","export const loadData = async function (url) {\r\n  let promise = await fetch(url);\r\n  return await promise.json();\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams} from 'react-router-dom';\r\nfunction NotFound(props) {\r\n    document.title = 'Страница не найдена';\r\n    return (\r\n      <div>\r\n        <h2>Страница не найдена</h2>\r\n        <a href='/'>Главная Страница</a>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\nfunction Movie(props) {\r\n    const [infoEp, setInfoEp] = useState({\r\n      prev: undefined,\r\n      current: undefined,\r\n      next: undefined,\r\n    });\r\n    const [data, setData] = useState(undefined);\r\n    let { id, type, season, ep } = useParams();\r\n    useEffect(() => {\r\n      if (props.info.episodes !== undefined) {\r\n        setData(\r\n          props.info.episodes.sort((a, b) => {\r\n            if (a.season_num < b.season_num) return -1;\r\n          })\r\n        );\r\n        if (props.info.episodes !== undefined) {\r\n          props.info.episodes.map((item, index) => {\r\n            if (item.num === props.episode && item.season_num === Number(props.season)) {\r\n              setInfoEp({\r\n                prev: props.info.episodes[index - 1],\r\n                current: item,\r\n                next: props.info.episodes[index + 1],\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }, []);\r\n    if (props.type === 'episode' || props.type === 'movie') {\r\n      if (infoEp.current === undefined && props.type === 'episode') {\r\n        return <NotFound />;\r\n      } else {\r\n        const info = props.info;\r\n        if(props.type === 'episode'){\r\n        document.title = `${info.ru_title} ${infoEp.current.season_num} сезон ${Number(infoEp.current.num)} серия`;\r\n        } else {\r\n          document.title = info.ru_title;\r\n        }\r\n        return (\r\n          <div className='content'>\r\n            <ol className='breadcrumb'>\r\n              <li className='breadcrumb-item'>\r\n                <a href={window.location.host}>Главная</a>\r\n              </li>\r\n              {info.episodes !== undefined &&\r\n              <li className='breadcrumb-item'>\r\n                <a href={`../${id}`}>{info.ru_title}</a>\r\n              </li>\r\n              }\r\n              <li className='breadcrumb-item' aria-current='page'>\r\n                {info.episodes !== undefined ? `${infoEp.current.season_num} сезон ${infoEp.current.num} серия` : info.ru_title}\r\n              </li>\r\n            </ol>\r\n            <h2 className='title'>\r\n            {info.episodes !== undefined ? \r\n            <a href={`../${id}`}>{info.ru_title}</a> \r\n            : info.ru_title}\r\n            </h2>\r\n           \r\n            {infoEp.current !== undefined && <h3 className='title'>{infoEp.current.ru_title}</h3>}\r\n            <div className='watch__year'> Дата Выхода: {props.type === 'episode' ? new Date(infoEp.current.released).toLocaleDateString() : new Date(info.released).toLocaleDateString()}</div>\r\n            <div className=\"embed-responsive embed-responsive-4by3 watch__iframe\">\r\n              <iframe\r\n                className=\"embed-responsive-item\"\r\n                src={props.type === 'episode' ? info.iframe_src + `?season=${season}&episode=${Number(ep.split('-')[0])}&nocontrol=1` : info.iframe_src}\r\n                allowFullScreen='allowfullscreen'\r\n              ></iframe>\r\n            </div>\r\n            <div className='d-flex justify-content-between switch-episode'>\r\n              {infoEp.prev !== undefined && (\r\n                <a\r\n                  href={`/${type}/${id}/season-${infoEp.prev.season_num}-episode-${infoEp.prev.num}`}\r\n                  className='badge badge-primary'\r\n                >\r\n                  {infoEp.prev.season_num} сезон {infoEp.prev.num} серия\r\n                </a>\r\n              )}\r\n              {info.episodes !== undefined &&\r\n              <a href={`.`} className='badge badge-primary'>\r\n                Список серий\r\n              </a>\r\n              }\r\n              {infoEp.next !== undefined && (\r\n                <a\r\n                  href={`/${type}/${id}/season-${infoEp.next.season_num}-episode-${infoEp.next.num}`}\r\n                  className='badge badge-primary'\r\n                >\r\n                  {infoEp.next.season_num} сезон {infoEp.next.num} серия\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    if (props.type === 'episode_list') {\r\n      document.title = `${props.info.ru_title} cписок серий`;\r\n       const info = props.info;\r\n       let season_num = 0;\r\n       while( season_num <info.season_count){\r\n        return (\r\n          <div className='content'>\r\n            {info.episodes.map((item,index) => {\r\n                return (\r\n                    <div className='content-episode' key={index}>\r\n                      <a\r\n                        href={`/${type}/${id}/season-${item.season_num}-episode-${item.num}`}\r\n                        className='badge badge-primary'\r\n                      >\r\n                        {item.season_num} сезон {item.num} серия\r\n                      </a>\r\n                    </div>\r\n                );\r\n            })}\r\n            \r\n          </div>\r\n        );\r\n    }\r\n   }\r\n  }\r\n\r\n  export {Movie}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { storeData } from '../store';\r\nimport {loadData} from '../api/index';\r\n\r\nimport { Movie } from './Movie&Ep';\r\n\r\nfunction Loading(props) {\r\n    return ( <h1>Loading...</h1> );\r\n}\r\nfunction NotFound(props) {\r\n    document.title = 'Страница не найдена';\r\n    return (\r\n      <div>\r\n        <h2>Страница не найдена</h2>\r\n        <a href='/'>Главная Страница</a>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\nfunction Info(props) {\r\n    let { id, type, season, ep } = useParams();\r\n    var [data, setData] = useState(undefined);\r\n    var sendType;\r\n    switch(type) {\r\n      case 'movie':  sendType = 'movies';\r\n      break;\r\n      case 'anime_tv_series': sendType = 'anime-tv-series';\r\n      break;\r\n      case 'tv_series' : sendType = 'tv-series';\r\n      break;\r\n      case 'anime' : sendType = 'animes';\r\n      break;\r\n      default: sendType = undefined;\r\n    }\r\n    useEffect(() => {\r\n      if(sendType !== undefined){\r\n      loadData(`${storeData.url_api}/api/${sendType}/?api_token=${storeData.api_token}&id=${id}}`).then((res) => {\r\n        setData(res);\r\n      })\r\n      .catch(setData(undefined));\r\n      setData('load');\r\n      }\r\n    }, []);\r\n\r\n    if (data === 'load') {\r\n      return (\r\n          <Loading />\r\n      );\r\n    } else if (data !== undefined && data.data.length === 1) {\r\n      const info = data.data[0];\r\n      if (['tv_series', 'anime_tv_series'].indexOf(type) !== -1) {\r\n        if (season !== undefined && ep !== undefined) {\r\n          return <Movie type='episode' info={info} episode={ep} season={season} />;\r\n        } else {\r\n          return <Movie type='episode_list' info={info}/>;\r\n        }\r\n      } else {\r\n        return <Movie type='movie' info={info} />;\r\n      }\r\n    } else {\r\n      return <NotFound />;\r\n    }\r\n  }\r\n\r\n  export { Info };","import React, { useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { storeData } from '../store'\r\nimport {loadData} from '../api/index';\r\nfunction Search(props){\r\n    const [searchData, setSearch] = useState(undefined);\r\n    const [showSearch,setShowSearch] = useState(false);\r\n    const [filter,setFilter] = useState({\r\n      movies:true,\r\n      serials:true,\r\n      animes:true,\r\n      anime_serials:true,\r\n    });\r\n    var showLoadSearch = false;\r\n    \r\nasync function search(value) {\r\n    if(typeof value === 'string'){\r\n    var data = [];\r\n    showLoadSearch = true;\r\n    if(filter.movies){\r\n    await loadData(`${storeData.url_api}/api/movies?api_token=${storeData.api_token}&title=${value}&limit=5`).then((res) => {\r\n       data = data.concat(res.data);\r\n    });\r\n   }\r\n   if(filter.serials){\r\n    await loadData(`${storeData.url_api}/api/tv-series?api_token=${storeData.api_token}&title=${value}&limit=5`).then((res) => {\r\n     data = data.concat(res.data);\r\n    });\r\n   }\r\n   if(filter.animes){\r\n    await loadData(`${storeData.url_api}/api/animes?api_token=${storeData.api_token}&title=${value}&limit=5`).then((res) => {\r\n     data = data.concat(res.data);\r\n    });\r\n   }\r\n   if(filter.anime_serials){\r\n    await loadData(`${storeData.url_api}/api/anime-tv-series?api_token=${storeData.api_token}&title=${value}&limit=5`).then((res) => {\r\n     data = data.concat(res.data);\r\n    });\r\n   }\r\n   showLoadSearch = false;\r\n   setSearch(data);\r\n   }\r\n  }\r\n  return(\r\n  <div className='search'>\r\n  <div className='input-group mb-3'>\r\n    <input\r\n      type='text'\r\n      className='form-control'\r\n      onChange={(event) => {\r\n        event.target.value.length >= 3 ? search(event.target.value) : setSearch(undefined);\r\n      }}\r\n      onFocus = {() => setShowSearch(true) }\r\n      aria-label='Default'\r\n      placeholder='Поиск...'\r\n      aria-describedby='inputGroup-sizing-default'\r\n    />\r\n    {showSearch &&\r\n     <span className=\"search__close\" onClick={ () => {\r\n       setShowSearch(false);\r\n     }}>Закрыть</span>\r\n    }\r\n  </div>\r\n  {showSearch &&\r\n       <span>Поиск от 3 символов</span>\r\n    }\r\n   {typeof filter === 'object' && showSearch &&\r\n    <ul className=\"filter\">\r\n    <li className=\"filter-item\">\r\n     <input type=\"checkbox\" \r\n     defaultChecked={filter.movies}\r\n     onChange={() => {\r\n       filter.movies = !filter.movies;\r\n     }}\r\n     id=\"filter_film\" />\r\n     <label for=\"filter_film\">Фильмы</label>\r\n     </li>\r\n     <li className=\"filter-item\">\r\n     <input type=\"checkbox\" \r\n     defaultChecked={filter.serials}\r\n     onChange={() => {\r\n       filter.serials = !filter.serials;\r\n     }}\r\n     id=\"filter_serial\" />\r\n     <label for=\"filter_serial\">Сериалы</label>\r\n     </li>\r\n     <li className=\"filter-item\">\r\n     <input type=\"checkbox\" \r\n     defaultChecked={filter.anime_serials}\r\n     onChange={() => {\r\n       filter.anime_serials = !filter.anime_serials;\r\n     }}\r\n     id=\"filter_anime\" />\r\n     <label for=\"filter_anime\">Аниме</label>\r\n     </li>\r\n     <li className=\"filter-item\">\r\n     <input type=\"checkbox\" \r\n     defaultChecked={filter.animes}\r\n     onChange={() => {\r\n       filter.animes = !filter.animes;\r\n     }}\r\n     id=\"filter_anime-films\" />\r\n     <label for=\"filter_anime-films\">Аниме фильмы</label>\r\n    </li>\r\n    </ul>\r\n   } \r\n  {searchData !== undefined && showSearch && typeof searchData === 'object' &&\r\n    <BrowserRouter\r\n    getUserConfirmation={(message, callback) => {\r\n      // this is the default behavior\r\n      const allowTransition = window.confirm(message);\r\n      callback(allowTransition);\r\n    }}\r\n    >\r\n      <ul className='search-list'>\r\n        {searchData.map((item,index) => {\r\n          return (\r\n            <li className='search-list__item' key={index}>\r\n              {/* <Link to={`${window.location.origin}/${item.content_type}/${item.id}/`}>{item.ru_title}</Link>  */}\r\n              <a href={`${window.location.origin}/${item.content_type}/${item.id}/`}>{item.ru_title}</a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </BrowserRouter>\r\n  }\r\n  {showLoadSearch &&\r\n  <div>\r\n    Загрузка...\r\n  </div>\r\n  }\r\n</div>\r\n);\r\n}\r\n\r\nexport { Search };","import React  from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap-css';\nimport { Info } from './components/Info';\nimport { Search } from './components/Search';\nimport { view } from '@risingstack/react-easy-state';\n\nfunction App() {\n  return (\n    <div className=\"wrap\">\n      <Search/>\n      <Switch basename=\"/\">\n        <Route path={process.env.PUBLIC_URL + '/about' }>about</Route>\n        <Route path={process.env.PUBLIC_URL + '/:type/:id/season-:season-episode-:ep'} exact component={Info}/>\n        <Route path={process.env.PUBLIC_URL + '/:type/:id'} exact component={Info} />\n        <Route exact path={process.env.PUBLIC_URL + '/'}>\n          <div>Главная Страница</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default view(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}